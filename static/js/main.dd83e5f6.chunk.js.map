{"version":3,"sources":["components/pieces/styles.tsx","components/pieces/piece.tsx","components/square/square.tsx","controllers/pieces/arrange-pieces.ts","controllers/squares/arrange-squares.ts","components/board/board.tsx","controllers/game/game-controller.tsx","types/type-guard.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Armor","styled","span","shadow","blackSquare","margin","fontSize","cursor","textShadow","transform","Piece","piece","name","Square","square","handleDrop","handleDragStart","Boundary","color","livery","onDragOver","e","preventDefault","handleDragOver","onDrop","coordinates","draggable","onDragStart","id","div","backgroundColor","width","height","zIndex","display","justifyContent","alignItems","createPiece","idx","firstMove","promoted","captured","renderSquare","i","x","y","Math","floor","Board","squaresArray","squares","push","arrangeSquares","pieces","pKing","pQueen","cKing","cQueen","cPawn","pPawn","cKnight","pKnight","cBishop","pBishop","cRook","pRook","arrangePieces","useState","updatedPieces","setUpdatedPieces","undefined","updatedSquares","setUpdatedSquares","movingPiece","updateMovingPiece","dataTransfer","setData","find","useEffect","squareCoordinates","moveCheck","fromX","fromY","dx","dy","slope","abs","isFirstMove","isSingleSpaceMove","isForwardMovePink","isForwardMoveCyan","pawn","isPawn","includes","alert","canMove","pieceToReplace","indexToReplace","indexOf","map","xMatch","yMatch","key","uuidv4","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd83e5f6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\ninterface Props {\n  blackSquare: boolean\n}\n\nexport const Armor = styled.span(({blackSquare}: Props) => {\n  const shadow = blackSquare ? 'white' : 'black'\n  return {\n    margin: 0,\n    fontSize: \"3.25vw\",\n    \":hover\": { cursor: \"pointer\", textShadow: `1px 1px 2px ${shadow}`, transform: '1.05'},\n    ':active': {textShadow: `1px 1px 2px ${shadow}` },\n  };\n});\n","import { IPawn, IPiece } from \"../../types/types\";\nimport {Armor} from './styles'\n\n\ninterface Props {\n  piece?: IPiece | IPawn\n  blackSquare: boolean\n}\n\nexport function Piece({piece, blackSquare}: Props) {\n\n  switch (piece?.name ) {\n    case 'knight':\n      return <Armor blackSquare={blackSquare} >&#x2658;</Armor>;\n    case 'queen':\n      return <Armor blackSquare={blackSquare} >&#x2655;</Armor>;\n    case 'bishop':\n      return <Armor blackSquare={blackSquare} >&#x2657;</Armor>;\n    case 'pawn':\n      return <Armor blackSquare={blackSquare} >&#x2659;</Armor>;\n    case 'rook':\n      return <Armor blackSquare={blackSquare} >&#x2656;</Armor>;\n    case 'king':\n      return <Armor blackSquare={blackSquare} >&#x2654;</Armor>\n    default:\n      return <></>;\n  }\n}\n","import React from 'react'\nimport {Piece} from '../pieces/piece'\nimport {Livery, ISquare, IPawn, IPiece, Coordinates} from '../../types/types'\nimport styled from 'styled-components';\n\ninterface Props {\n  square: ISquare,\n  handleDrop: (squareCoordinates: Coordinates) => void,\n  handleDragStart: (event: React.DragEvent<HTMLSpanElement>, id?: string) => void\n  piece?: (IPawn | IPiece)\n}\n\nexport function Square({square, handleDrop, handleDragStart, piece}: Props) {\n  \n  function handleDragOver(e: React.DragEvent<HTMLSpanElement>) {\n    e.preventDefault();\n  };\n\n  return (\n    <Boundary\n    color={square.color} \n    livery={piece?.livery}\n    onDragOver={(e) => handleDragOver(e)} \n    onDrop={() => handleDrop(square.coordinates)}\n    >\n      {piece ? \n      <span draggable={true} onDragStart={(e) => handleDragStart(e, piece?.id)}>\n        <Piece blackSquare={square.color === 'black'} piece={piece} />\n      </span> : null}\n    </Boundary>\n  )\n}\n\ninterface BoundaryProps {\n  color: string,\n  livery?: Livery\n}\n//TODO: I would like some dragging from, and dragging to border highlights and possibly highlighting squares that are allowed.\nconst Boundary = styled.div(({color, livery}: BoundaryProps) => {\n  return {\n    backgroundColor: color, \n    width: '6.25vw', \n    height: '6.25vh', \n    zIndex: 20, \n    color: livery, \n    display: 'flex', \n    justifyContent: 'center', \n    alignItems: 'center'\n  }\n})","import {Coordinates, IPawn, IPiece, Livery } from '../../types/types'\n\ninterface Config {\n  livery: Livery,  \n  name: string, \n  coordinates: Coordinates, \n  idx?: number, \n  firstMove?: boolean, \n  promoted?: boolean\n}\n\nfunction createPiece({name, livery, coordinates, idx, firstMove, promoted}: Config): (IPiece | IPawn) {\n  switch (name) {\n    case ('king' || 'queen'):\n      return {\n        livery: livery,\n        id: livery + name,\n        name: name,\n        coordinates: coordinates,\n        captured: false\n      }\n    case 'pawn':\n      return {\n        livery: livery,\n        id: livery + name + idx,\n        name: name,\n        coordinates: coordinates,\n        captured: false,\n        firstMove: firstMove,\n        promoted: promoted\n      }\n    default:\n      return {\n        livery: livery,\n        id: livery + name + idx,\n        name: name,\n        coordinates: coordinates,\n        captured: false\n      }\n\n  }\n\n}\n\nexport function arrangePieces(): (IPawn | IPiece)[] {\n  const pieces = []\n\n  const pKing = createPiece({livery: \"hotpink\", name: \"king\", coordinates: [3, 7]})\n  const pQueen = createPiece({livery: \"hotpink\", name: \"queen\", coordinates: [4, 7]})\n  const cKing = createPiece({livery: \"cyan\", name: \"king\", coordinates: [3, 0]})\n  const cQueen = createPiece({livery: \"cyan\", name: \"queen\", coordinates: [4, 0]})\n\n  pieces.push(pKing, pQueen, cKing, cQueen)\n\n  for (let i = 0; i < 8; i++) {\n    const cPawn = createPiece({livery: \"cyan\", idx: i, name: \"pawn\", coordinates: [i, 1], firstMove: true, promoted: false})\n    const pPawn = createPiece({livery: \"hotpink\", idx: i, name: \"pawn\", coordinates: [i, 6], firstMove: true, promoted: false})\n\n    pieces.push(cPawn, pPawn);\n  }\n\n  for (let i = 0; i < 2; i++) {\n    const cKnight = createPiece({livery: \"cyan\", idx: i, name: \"knight\", coordinates: i === 0 ? [6, 0] : [1, 0]})\n    const pKnight = createPiece({livery: \"hotpink\", idx: i, name: \"knight\", coordinates: i === 0 ? [6, 7] : [1, 7]})\n\n    const cBishop = createPiece({livery: \"cyan\", idx: i, name: \"bishop\", coordinates: i === 0 ? [5, 0] : [2, 0]})\n    const pBishop = createPiece({livery: \"hotpink\", idx: i, name: \"bishop\", coordinates: i === 0 ? [5, 7] : [2, 7]})\n\n    const cRook = createPiece({livery: \"cyan\", idx: i, name: \"rook\", coordinates: i === 0 ? [7, 0] : [0, 0]})\n    const pRook = createPiece({livery: \"hotpink\", idx: i, name: \"rook\", coordinates: i === 0 ? [7, 7] : [0, 7]})\n\n    pieces.push(cKnight, pKnight, cBishop, pBishop, cRook, pRook)\n  }\n  return pieces\n}","import { Coordinates } from \"../../types/types\";\n\nfunction renderSquare(i: number) {\n  const x = i % 8;\n  const y = Math.floor(i / 8);\n  const black = (x + y) % 2 === 1;\n  const color: 'black' | 'white' = black ? 'black' : 'white';\n  const coordinates: Coordinates = [x,y]\n\n  const square = {\n    color: color,\n    coordinates: coordinates,\n  }\n  return square\n}\n\n\nexport function arrangeSquares() {\n  const squares = []\n  for (let i = 63; i >= 0; i--) {\n    squares.push(renderSquare(i));\n  }\n  return squares\n}","import React, {useEffect, useState} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {Square} from '../square/square';\nimport { Coordinates, IPawn, IPiece } from '../../types/types';\nimport styled from 'styled-components';\nimport { canMove } from '../../controllers/game/game-controller';\nimport { arrangePieces } from '../../controllers/pieces/arrange-pieces';\nimport { arrangeSquares } from '../../controllers/squares/arrange-squares';\n\n\nexport function Board() {\n  const squaresArray = arrangeSquares()\n  const pieces = arrangePieces()\n\n  const [updatedPieces, setUpdatedPieces] = useState(pieces)\n  const [updatedSquares, setUpdatedSquares] = useState<JSX.Element[] | undefined>(undefined)\n  const [movingPiece, updateMovingPiece] = useState<IPawn | IPiece | undefined>(undefined)\n\n  function handleDragStart(e: React.DragEvent<HTMLSpanElement>, id?: string) {\n    if(!id) return\n    e.dataTransfer.setData('id', id)\n    const piece = updatedPieces.find(piece => piece.id === id)\n    updateMovingPiece(piece)\n  }\n\n    useEffect(() => {\n\n      function handleDrop(squareCoordinates: Coordinates) {\n        if(movingPiece){\n          const moveCheck = canMove(squareCoordinates, movingPiece)\n          if(moveCheck){\n            movingPiece.coordinates[0] = squareCoordinates[0]\n            movingPiece.coordinates[1] = squareCoordinates[1]\n            const pieceToReplace = updatedPieces.find(piece => piece.id === movingPiece.id)\n            const indexToReplace = updatedPieces.indexOf(pieceToReplace!)\n            updatedPieces[indexToReplace] = movingPiece\n            setUpdatedPieces(updatedPieces)\n          }\n          updateMovingPiece(undefined)\n        } \n      }\n      const squares = squaresArray.map(square => {\n        const piece = updatedPieces.find(piece => {\n          const xMatch = piece.coordinates[0] === square.coordinates[0]\n          const yMatch = piece.coordinates[1] === square.coordinates[1]\n    \n          if(xMatch && yMatch){\n            return piece\n          } else return undefined\n        })\n        const key = uuidv4()\n          return (\n            <Square key={key} piece={piece} square={square} handleDrop={handleDrop} handleDragStart={handleDragStart}/>\n          )\n        });\n      setUpdatedSquares(squares)\n\n      //Adding the dependencies eslint was asking for caused constant re-rendering.\n      //TODO: state management is not great >_< \n      // eslint-disable-next-line\n    }, [updatedPieces, movingPiece])\n\n  return <Boundary>{updatedSquares}</Boundary>\n}\n\nconst Boundary = styled.div`\ndisplay: flex; \nflex-wrap: wrap; \nwidth: 50vw; \nheight: 50vh; \nbackground-color: blue; \nposition: absolute; \nbottom: 25%; \nleft: 25%; \nborder: 1px solid gray\n`\n","import { isPawn } from \"../../types/type-guard\";\nimport { Coordinates, IPawn, IPiece } from \"../../types/types\";\n\nexport function canMove(squareCoordinates: Coordinates, piece: (IPawn | IPiece) ) {\n  const id = piece.id\n  const [fromX, fromY] = piece.coordinates;\n  const [toX, toY] = squareCoordinates\n  const dx = toX - fromX;\n  const dy = toY - fromY;\n  const slope = Math.abs(dy / dx);\n  const isFirstMove = Math.abs(dy) <= 2;\n  const isSingleSpaceMove = Math.abs(dx) === 1 || Math.abs(dy) === 1;\n  const isForwardMovePink = dy < 0;\n  const isForwardMoveCyan = dy > 0;\n  const pawn = isPawn(piece) \n\n  if (pawn && !piece.promoted) {\n    if (id.includes(\"pink\")) {\n      if (\n        piece.firstMove &&\n        isForwardMovePink &&\n        isFirstMove &&\n        (slope === 1 || dx === 0)\n      ) {\n        piece.firstMove = false;\n        return true;\n      } else if (\n        !piece.firstMove &&\n        isSingleSpaceMove &&\n        isForwardMovePink &&\n        (slope === 1 || dx === 0)\n      ) {\n        return true;\n      } else {\n        alert(\"Pink Queendom, restrain your pawn!\");\n      }\n    } else if (id.includes(\"cyan\")) {\n      if (\n        piece.firstMove &&\n        isForwardMoveCyan &&\n        isFirstMove &&\n        (slope === 1 || dx === 0)\n      ) {\n        piece.firstMove = false;\n        return true;\n      } else if (\n        !piece.firstMove &&\n        isSingleSpaceMove &&\n        isForwardMoveCyan &&\n        (slope === 1 || dx === 0)\n      ) {\n        return true;\n      } else {\n        alert(\"Cyan Queendom, restrain your pawn!\");\n      }\n    }\n  } else if (id.includes(\"knight\")) {\n    if (slope === 2 || slope === 1 / 2) {\n      return true;\n    } else if (id.includes(\"knight\")) {\n      alert(\"But ur literally a knight tho?\");\n      return false;\n    }\n  } else if (id.includes(\"bishop\")) {\n    if (slope === 1) {\n      return true;\n    } else if (id.includes(\"bishop\")) {\n      alert(\"Wow a bishop tryna cheat smdh\");\n      return false;\n    }\n  } else if (id.includes(\"rook\")) {\n    if (dx === 0 || dy === 0) {\n      return true;\n    } else if (id.includes(\"rook\")) {\n      alert(\"wtf you doin R O O K?\");\n      return false;\n    }\n  } else if (id.includes(\"king\")) {\n    if (isSingleSpaceMove && (slope === 1 || dx === 0 || dy === 0)) {\n      return true;\n    } else {\n      alert(\"Queen, your king is drunk. Retrieve them!\");\n      return false;\n    }\n  } else return true;\n}\n","import { IPawn, IPiece } from \"./types\"\n\n\n\nexport function isPawn(piece?: IPawn | IPiece): piece is IPawn {\n  if(!piece) return false\n  if(\"firstMove\" in piece){\n    return true\n  }\n  return false\n\n\n}","import React from 'react';\nimport {Board} from './components/board/board'\n\nfunction App() {\n  return (\n    <Board/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}